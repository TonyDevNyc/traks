<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">


	<batch:job id="importReferenceDataJob">
		<batch:step id="readValidateWriteReferenceData" next="emailReport">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:transaction-attributes isolation="READ_COMMITTED" propagation="REQUIRED" timeout="30"/>
				
				<batch:chunk 
						reader="referenceDataReader" 
						processor="compositeItemProcessor" 
						writer="referenceDataWriter" 
						skip-limit="50" chunk-completion-policy="timeoutCompletionPolicy">
					<batch:skippable-exception-classes>
						<batch:include class="org.springframework.batch.item.file.FlatFileParseException" />
						<batch:include class="org.springframework.batch.item.validator.ValidationException" />
						<batch:exclude class="java.io.FileNotFoundException"/>
					</batch:skippable-exception-classes>
				</batch:chunk>
				<batch:listeners>
					<batch:listener ref="skipListener" />
				</batch:listeners>
			</batch:tasklet>
		</batch:step>
		<batch:step id="emailReport" next="cleanup">
			<batch:tasklet ref="emailReportTasklet" />
		</batch:step>
		<batch:step id="cleanup">
			<batch:tasklet ref="cleanupTask" />
		</batch:step>
	</batch:job>

	<bean id="skipListener" class="com.target.trak.system.batch.referencedataimport.listeners.ReferenceDataSkipJdbcListener" scope="step"> 
		<constructor-arg ref="dataSource" />
		<property name="queryProps" ref="queryProperties" />
	</bean>
	
	<bean id="referenceDataReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:#{jobParameters['targetDirectory']+jobParameters['targetFile']}" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
  				<property name="lineTokenizer">
    				<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="TYPE,LABEL,VALUE,STATUS" /> 
					</bean>
      			</property>
      			<property name="fieldSetMapper">
					<bean class="com.target.trak.system.batch.referencedataimport.mappers.ReferenceDataFieldSetMapper" />
      			</property>
    		</bean>
  		</property>
	</bean>
	
	<bean id="compositeItemProcessor" class="org.springframework.batch.item.support.CompositeItemProcessor">
  		<property name="delegates">
		    <list>
		      <ref local="existingReferenceDataFilterProcessor"/>
		      <ref local="referenceDataValidatingItemProcessor"/>
		    </list>
  		</property>
	</bean>
	
 	<bean id="referenceDataValidatingItemProcessor" class="org.springframework.batch.item.validator.ValidatingItemProcessor" scope="step">
 		<property name="filter" value="false" />
 		<property name="validator">
			<bean  class="com.target.trak.system.batch.referencedataimport.validators.ReferenceDataValidator">
				<property name="referenceDataRules" ref="referenceDataRules" />
			</bean>
 		</property>
	</bean>
 	
	<bean id="existingReferenceDataFilterProcessor" 
		class="com.target.trak.system.batch.referencedataimport.processors.ExistingReferenceDataFilterItemProcessor" scope="step">
		<constructor-arg ref="dataSource" />
		<property name="queryProperties" ref="queryProperties" />
	</bean>
	
	<bean id="referenceDataWriter" class="com.target.trak.system.batch.referencedataimport.writers.ReferenceDataJdbcItemWriter">
		<constructor-arg ref="dataSource" />
		<property name="queryProperties" ref="queryProperties" />
	</bean>

	<util:properties id="queryProperties" location="classpath:/META-INF/batch/reference-data-import-job/queries.xml" />
	
	<bean id="emailReportTasklet" class="com.target.trak.system.batch.referencedataimport.tasklets.EmailReferenceDataReportTasklet">
		<!-- <property name="emailService" ref="emailService" /> -->
		<property name="batchErrorDao" ref="batchErrorDao" />
	</bean>
	
	<bean id="batchErrorDao" class="com.target.trak.system.batch.common.impl.BatchErrorDaoImpl">
		<constructor-arg ref="dataSource" />
		<property name="queryProperties" ref="queryProperties" />
	</bean>
	
	<bean id="cleanupTask" class="com.target.trak.system.batch.referencedataimport.tasklets.ReferenceDataFileCleanupTask" />
	
	<bean id="timeoutCompletionPolicy" class="org.springframework.batch.repeat.policy.TimeoutTerminationPolicy"> 
		<constructor-arg value="240"/>
	</bean>

</beans>